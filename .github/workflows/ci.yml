name: CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Prepare env. Ruby, Bun, Gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
      - uses: oven-sh/setup-bun@v2
      - run: |
          bundle install
          bundle binstubs bundler-audit brakeman rubocop

      - name: Prettier. Check JS and CSS
        run: |
          bun add --global prettier
          bun x prettier --check app/**/*.js
          bun x prettier --check app/**/*.css

      - name: Security audit dependencies
        run: bin/bundler-audit --update

      - name: Check smell code
        run: bundle exec reek --failure-exit-code 1 .

      - name: Lint Ruby files
        run: bin/rubocop --parallel

      - name: Lint ERB files
        run: bundle exec erb_lint **/*.erb

      - name: HTML beautifier
        run: bundle exec htmlbeautifier app/views/**/*.erb -l

      - name: Security audit application code
        run: bin/brakeman -q -w2

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres

        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3
    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y curl libjemalloc2 libvips postgresql-client

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      # Install bun
      - uses: oven-sh/setup-bun@v1

      - name: Prepare assets and database for tests
        run: |
          bin/rails assets:precompile
          bin/rails db:test:prepare

      - name: Run rspec tests
        run: bundle exec rspec -f d

      - name: Run cucumber tests
        run: bundle exec cucumber

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v5
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Create compose and start Application
        run: |
          export DATABASE_URL=postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@db:5432
          export RAILS_LOG_TO_STDOUT=true
          docker compose -f ./compose.yml up --build -d

      - name: Check health
        run: |
          docker ps
          sleep 10 
          curl -f http://localhost:3500/up || exit 1
