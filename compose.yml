services:
  db:
    image: postgres:16.3-alpine
    environment:
      - POSTGRES_USER=${DATABASE_USER:-postgres}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-password}
      - POSTGRES_DB=${DATABASE_NAME:-database}
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 3
  app:
    build: .
    environment:
      - SECRET_KEY_BASE=${SECRET_KEY_BASE:-a8c29f43e629b296b223cd37f24510436992883f0b9cebd067646241c68a66d19e3de368826f61cf5ee2b3cb37071060778a0123b885718d6d90f7443386655d}
      - RAILS_ALLOWED_HOSTS=${RAILS_ALLOWED_HOSTS:-localhost}
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - ${APP_CONTAINER_PORT:-3500}:8080
    restart: always
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/up || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  pgdata:
